#============================================================================
# this is a prod env ~
#============================================================================
#端口
server.port=80
#实例名
spring.application.name=Suk-BLOG
#解决springboot http传输中文乱码
spring.http.encoding.enabled=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
server.tomcat.uri-encoding=UTF-8
#log level
logging.level.root=debug
#============================================================================
# jdbc Setting
#============================================================================
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/blog_db?characterEncoding=utf-8&serverTimezone=GMT&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.tomcat.init-s-q-l=SET NAMES utf8mb4
## 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=80
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,logback
spring.datasource.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#============================================================================
# mybatis Setting
#============================================================================
mybatis-plus.type-aliases-package=com.suk.blog.entity
mybatis-plus.mapper-locations=classpath*:sqlmap/**/*Mapper.xml
#============================================================================
# shiro Setting
#============================================================================
# 登录地址
shiro.user.loginUrl=/login
# 权限认证失败地址
shiro.user.unauthorizedUrl=/unauth
# 首页地址
shiro.user.indexUrl=/index
# 验证码开关
shiro.user.captchaEnabled=true
# 验证码类型 math 数组计算 char 字符
shiro.user.captchaType=math
# 设置Cookie的域名 默认空，即当前访问的域名
shiro.cookie.domain=
# 设置cookie的有效访问路径
shiro.cookie.path=/
# 设置HttpOnly属性
shiro.cookie.httpOnly=true
# 设置Cookie的过期时间，天为单位
shiro.cookie.maxAge=30
# Session超时时间（默认30分钟）
shiro.session.expireTime=30
# 同步session到数据库的周期（默认1分钟）
shiro.session.dbSyncPeriod=1
# 相隔多久检查一次session的有效性，默认就是10分钟
shiro.session.validationInterval=10
# 同一个用户最大会话数，比如2的意思是同一个账号允许最多同时两个人登录（默认-1不限制）
shiro.session.maxSession=-1
# 踢出之前登录的/之后登录的用户，默认踢出之前登录的用户
shiro.session.kickoutAfter=false
#用户配置
#密码错误{maxRetryCount}次锁定10分钟
user.password.maxRetryCount=5
#============================================================================
# thymeleaf Setting
#============================================================================
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.messages.basename=static/i18n/messages
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.devtools.restart.enabled=true
spring.devtools.restart.trigger-file=.trigger
#============================================================================
# SFTP Client Setting
#============================================================================
sftp.client.domain=
sftp.client.protocol=sftp
sftp.client.host=
sftp.client.port=22
sftp.client.username=
sftp.client.password=
sftp.client.root=
sftp.client.privateKey=
sftp.client.passphrase=
sftp.client.sessionStrictHostKeyChecking=no
sftp.client.sessionConnectTimeout=15000
sftp.client.channelConnectedTimeout=15000
spring.mvc.favicon.enabled=false
#============================================================================
# Alipay
#============================================================================
#商家appId
alipay.dmf.appId=
#商家私钥
alipay.dmf.privateKey=
#支付宝公钥
alipay.zfb.publicKey=
#商家公钥
alipay.dmf.publicKey=
